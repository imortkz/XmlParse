# test XML parse class
# Copyright © 2015 Valentin Kim
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

		Тестовое задание

Разбор XML-документа
Для каждой ноды "//input", у которой присутствует дочерняя нода "tuningSetup", извлечь значения аттрибутов
"@id" текущей и дочерней нод.
Исходный текст: http://pastebin.com/raw.php?i=Wpjx1BGY
Язык реализации любой (Но, пожалуйста, не brainfuck, не ассемблер).
Дополнительно: будет плюсом, если в скрипте/программе будет реализовано получение документа по http
непосредственно с ресурса.
Дополнительно: так же будет зачтено, если в скрипте/программе будут учтены исключительные ситуации или,
по крайней мере, если возможные исключения будут указаны в комментариях.
В данном тесте правильным считается ответ в виде файла исходного кода или скрипта, корректно извлекающий
значения ID из приведенного в качестве примера  документа.

Список файлов:
		TestXmlParse	— каталог с xml документами для юнит-тестов
		XmlParse.py 	— класс xmlParse
		example.py 		— пример использования класса xmlParse()
		LICENSE			— лицензия GPL v.2
		README			— файл README

На основании тестового задания была разработана следующая спецификация:

		Спецификация

	1. Семантика. 

Разбираем XML документ, предоставленный в виде ссылки на локальный файл или ссылки HTTP.
Необходимо найти все ноды <input>, у которых есть дочерние ноды <tuningSetup>, извлечь значение атрибута
id ноды <tuningSetup> и родительской по отношению к ней ноды <input>

Требования к XML документу сформированы на основании предоставленного исходного текста:
http://pastebin.com/raw.php?i=Wpjx1BGY

- Документ, не являющийся валидным XML документом, считается некорректным.
- Элемент <input> без атрибута id
- Элемент <tuningSetup> без атрибута id
- Документ, с дублирующимися атрибутами id у разных элементов <input> считается некорректным.

	2. Входные параметры

Это будет класс XmlParse с одним публичным методом parse(), и следующими свойствами:
- XmlParse.parent_tag: тег-родитель, в нашем случае "input"
- XmlParse.parent_attr: нужный атрибут тега-родителя, в нашем случае "id"
- XmlParse.child_tag: тег-потомок, в нашем случае "tuningSetup"
- XmlParse.child_attr: нужный атрибут тега-потомка, в нашем случае "id"
- XmlParse.max_size: максимальный размер документа для разбора, по умолчанию 16 Кбайт

У метода parse() единственный параметр user_input, который должен содержать относительный/абсолютный путь к файлу)
XML документа для разбора или URL содержащий прямую ссылку на XML документ. URL должен начинаться с http://
или https://, в противном случае строка будет интерпретирована как локальный путь к файлу.
Поведение по умолчанию можно переопределить с помощью задания свойства XmlParse.max_size

Пример использования приведён в example.py

	3. Выходные параметры.
	
Метод parse() вернёт словарь (dictionary), ключом в котором являются атрибуты parent_attr элементов parent_tag, а
значениями элементы типа список (list) содержащие один или несколько значений атрибутов child_attr элементов
child_tag.
Например, для исходного текста http://pastebin.com/raw.php?i=Wpjx1BGY метод вернёт:

	{'100': ['0'], '1': ['1', '2', '3'], '2': ['1']}

В случае ошибки будет возвращено исключение класса xmlParseException, с выводом кода ошибки и его описанием.
Текст описания не специфицируется.
Коды ошибок: 

1xx - неверный набор входных параметров
...100 - в качестве параметра передана не строка или параметр пустой
...101 - не удаётся открыть HTTP ссылку
...102 - не удаётся открыть файл
...103 - параметру max_size передано недопустимое значение
...104 - параметру parent_tag передано недопустимое значение
...105 - параметру parent_attr передано недопустимое значение
...106 - параметру child_tag передано недопустимое значение
...107 - параметру child_attr передано недопустимое значение
2xx - неверный формат документа (ошибка разбора XML)
...200 - документ не является документом XML
...201 - размер документа превышает допустимый
...202 - у элемента <parent_tag> отсутствует атрибут parent_attr
...204 - у элемента <child_tag> отсутствует атрибут parent_attr
...206 - есть элементы <parent_tag> с дублирующимися значениями атрибута parent_attr.

Если ситуация потенциально может вызвать несколько ошибок, то сообщается только о первой встреченной нами ошибке.
При этом порядок проверки потенциально ошибочных ситуаций не определен.

	4. Нефункциональные требования. 

Код разработан для версии языка Python 3.4.х, и протестирован для исполнения в среде Windows (Windows 7 x64)
К скорости вычисления выражения, и к объему памяти, занимаемой в процессе вычисления, требований нет.

		Тесты	

Для тестирования разработан класс XmlParseTest() с использованием библиотеки unittest

1. Тестирование разбора корректного XML документа
1.1. Предоставленный исходный текст
1.2. Документ с несколькими нодами <input> без вложенных нод <tuningSetup>
1.3. Документ с несколькими нодами <input>, одна из которых вложена в другую, и содержит в себе ноду <tuningSetup>
1.4. Документ с нодой <tuningSetup> вложенной в другую ноду <tuningSetup> 
1.5. Документ с нодой <input> и вложенной нодой <tuningSetup>, вложенные произвольно глубоко.
2. Тестирование входных параметров
2.1. Параметр user_input неверного типа
2.1.1. Число
2.1.2. Список
2.1.3. Null
2.1.4. Отрицательное число
2.1.5. Пустой словарь
2.1.6. Словарь с элементами
2.2. Несуществующий файл, некорректный URL
2.3. Несуществующий URL
2.4. Слишком большой XML документ
2.5. Слишком большой документ (при увеличении xmlParse.maxSize)
2.6. Некорректное значение XmlParse.maxSize
2.7. Некорректное значение XmlParse.parent_tag
2.8. Некорректное значение XmlParse.parent_attr
2.9. Некорректное значение XmlParse.child_tag
2.10. Некорректное значение XmlParse.child_attr
3. Тестирование разбора некорректного XML документа
3.1. Невалидный XML документ
3.2. Есть нода parent_tag без атрибута id
3.3. Есть нода child_tag без атрибута id
3.4. Есть нода parent_tag с дублирующимся атрибутом id
